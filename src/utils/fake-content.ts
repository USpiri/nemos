export const content =
  '<h1>Standard features</h1><p>The following text features are as standard, supported by Notes editor.</p><h2>Headings</h2><p>Headings from <code>h1</code> through <code>h6</code> are constructed with a <code>#</code> for each level:</p><pre><code class="language-plaintext"># h1 Heading\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n###### h6 Heading\n</code></pre><p>Renders to this HTML:</p><pre><code class="language-plaintext">&lt;h1&gt;h1 Heading&lt;/h1&gt;\n&lt;h2&gt;h2 Heading&lt;/h2&gt;\n&lt;h3&gt;h3 Heading&lt;/h3&gt;\n&lt;h4&gt;h4 Heading&lt;/h4&gt;\n&lt;h5&gt;h5 Heading&lt;/h5&gt;\n&lt;h6&gt;h6 Heading&lt;/h6&gt;</code></pre><p>Which looks like this in the browser:</p><h1>h1 Heading</h1><h2>h2 Heading</h2><h3>h3 Heading</h3><h4>h4 Heading</h4><h5>h5 Heading</h5><h6>h6 Heading</h6><hr><h2>Paragraphs</h2><p>Body copy written as normal plain-text will be wrapped with <code>&lt;p&gt;&lt;/p&gt;</code> tags in the rendered HTML.</p><p>So this:</p><pre><code class="language-plaintext">Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.</code></pre><p>Renders to this HTML:</p><pre><code class="language-plaintext">&lt;p&gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.&lt;/p&gt;</code></pre><hr><h2>Horizontal Rule</h2><p>The HTML <code>&lt;hr&gt;</code> element is for creating a "thematic break" between paragraph-level elements. In markdown, you can use of the following for this purpose:</p><ul><li><p><code>___</code>: three consecutive underscores</p></li><li><p><code>---</code>: three consecutive dashes</p></li><li><p><code>***</code>: three consecutive asterisks</p></li></ul><p>Renders to:</p><hr><hr><hr><h2>Emphasis</h2><h3>Bold</h3><p>For emphasizing a snippet of text with a heavier font-weight. The following snippet of text is <strong>rendered as bold text</strong>.</p><pre><code class="language-plaintext">**rendered as bold text**\n</code></pre><p>Renders to:</p><p><strong>rendered as bold text</strong></p><p>and this HTML:</p><pre><code class="language-plaintext">&lt;strong&gt;rendered as bold text&lt;/strong&gt;</code></pre><h3>Italics</h3><p>For emphasizing a snippet of text with italics. The following snippet of text is <em>rendered as italicized text</em>.</p><pre><code class="language-plaintext">*rendered as italicized text*\n</code></pre><p>Renders to:</p><p><em>rendered as italicized text</em></p><p>and this HTML:</p><pre><code class="language-plaintext">&lt;em&gt;rendered as italicized text&lt;/em&gt;</code></pre><h2>Blockquotes</h2><p>Used for defining a section of quoting text from another source, within your document. To create a blockquote, use <code>&gt;</code> before any text you want to quote:</p><pre><code class="language-plaintext">&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante</code></pre><p>Renders to:</p><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p></blockquote><p>And the generated HTML from a markdown parser might look something like this:</p><pre><code class="language-plaintext">&lt;blockquote&gt;\n  &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.&lt;/p&gt;\n&lt;/blockquote&gt;</code></pre><p>Blockquotes can also be nested:</p><pre><code class="language-plaintext">&gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue.\nNunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\n&gt;&gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor\nodio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n&gt;&gt;&gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue.\nNunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\n</code></pre><p>Renders to:</p><blockquote><p>Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.</p><blockquote><p>Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.</p><blockquote><p>Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.</p></blockquote></blockquote></blockquote><h2>Lists</h2><h3>Unordered Lists</h3><p>A list of items in which the order of the items does not explicitly matter.</p><p>You may use any of the following symbols to denote bullets for each list item:</p><pre><code class="language-plaintext">* valid bullet\n- valid bullet\n+ valid bullet\n</code></pre><p>For example</p><pre><code class="language-plaintext">+ Lorem ipsum dolor sit amet\n+ Consectetur adipiscing elit\n+ Integer molestie lorem at massa\n+ Facilisis in pretium nisl aliquet\n+ Nulla volutpat aliquam velit\n  - Phasellus iaculis neque\n  - Purus sodales ultricies\n  - Vestibulum laoreet porttitor sem\n  - Ac tristique libero volutpat at\n+ Faucibus porta lacus fringilla vel\n+ Aenean sit amet erat nunc\n+ Eget porttitor lorem\n</code></pre><p>Renders to:</p><ul><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>Facilisis in pretium nisl aliquet</p></li><li><p>Nulla volutpat aliquam velit</p><ul><li><p>Phasellus iaculis neque</p></li><li><p>Purus sodales ultricies</p></li><li><p>Vestibulum laoreet porttitor sem</p></li><li><p>Ac tristique libero volutpat at</p></li></ul></li><li><p>Faucibus porta lacus fringilla vel</p></li><li><p>Aenean sit amet erat nunc</p></li><li><p>Eget porttitor lorem</p></li></ul><p>And this HTML</p><pre><code class="language-plaintext">&lt;ul&gt;\n  &lt;li&gt;Lorem ipsum dolor sit amet&lt;/li&gt;\n  &lt;li&gt;Consectetur adipiscing elit&lt;/li&gt;\n  &lt;li&gt;Integer molestie lorem at massa&lt;/li&gt;\n  &lt;li&gt;Facilisis in pretium nisl aliquet&lt;/li&gt;\n  &lt;li&gt;Nulla volutpat aliquam velit\n    &lt;ul&gt;\n      &lt;li&gt;Phasellus iaculis neque&lt;/li&gt;\n      &lt;li&gt;Purus sodales ultricies&lt;/li&gt;\n      &lt;li&gt;Vestibulum laoreet porttitor sem&lt;/li&gt;\n      &lt;li&gt;Ac tristique libero volutpat at&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Faucibus porta lacus fringilla vel&lt;/li&gt;\n  &lt;li&gt;Aenean sit amet erat nunc&lt;/li&gt;\n  &lt;li&gt;Eget porttitor lorem&lt;/li&gt;\n&lt;/ul&gt;</code></pre><h3>Ordered Lists</h3><p>A list of items in which the order of items does explicitly matter.</p><pre><code class="language-plaintext">1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n4. Facilisis in pretium nisl aliquet\n5. Nulla volutpat aliquam velit\n6. Faucibus porta lacus fringilla vel\n7. Aenean sit amet erat nunc\n8. Eget porttitor lorem\n</code></pre><p>Renders to:</p><ol><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>Facilisis in pretium nisl aliquet</p></li><li><p>Nulla volutpat aliquam velit</p></li><li><p>Faucibus porta lacus fringilla vel</p></li><li><p>Aenean sit amet erat nunc</p></li><li><p>Eget porttitor lorem</p></li></ol><p>And this HTML:</p><pre><code class="language-plaintext">&lt;ol&gt;\n  &lt;li&gt;Lorem ipsum dolor sit amet&lt;/li&gt;\n  &lt;li&gt;Consectetur adipiscing elit&lt;/li&gt;\n  &lt;li&gt;Integer molestie lorem at massa&lt;/li&gt;\n  &lt;li&gt;Facilisis in pretium nisl aliquet&lt;/li&gt;\n  &lt;li&gt;Nulla volutpat aliquam velit&lt;/li&gt;\n  &lt;li&gt;Faucibus porta lacus fringilla vel&lt;/li&gt;\n  &lt;li&gt;Aenean sit amet erat nunc&lt;/li&gt;\n  &lt;li&gt;Eget porttitor lorem&lt;/li&gt;\n&lt;/ol&gt;</code></pre><h3>Time-saving Tip!</h3><p>Sometimes lists change, and when they do it\'s a pain to re-order all of the numbers. Markdown solves this problem by allowing you to simply use <code>1.</code> before each item in the list.</p><p>For example:</p><pre><code class="language-plaintext">1. Lorem ipsum dolor sit amet\n1. Consectetur adipiscing elit\n1. Integer molestie lorem at massa\n1. Facilisis in pretium nisl aliquet\n1. Nulla volutpat aliquam velit\n1. Faucibus porta lacus fringilla vel\n1. Aenean sit amet erat nunc\n1. Eget porttitor lorem\n</code></pre><p>Automatically re-numbers the items and renders to:</p><ol><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>Facilisis in pretium nisl aliquet</p></li><li><p>Nulla volutpat aliquam velit</p></li><li><p>Faucibus porta lacus fringilla vel</p></li><li><p>Aenean sit amet erat nunc</p></li><li><p>Eget porttitor lorem</p></li></ol><h2>Code</h2><h3>Inline code</h3><p>Wrap inline snippets of code with a single backtick: <code>`</code>.</p><p>For example, to show <code>&lt;div&gt;&lt;/div&gt;</code> inline with other text, just wrap it in backticks.</p><pre><code class="language-plaintext">For example, to show `&lt;div&gt;&lt;/div&gt;` inline with other text, just wrap it in backticks.</code></pre><h3>"Fenced" code block</h3><p>Three consecutive backticks, referred to as "code fences", are used to denote multiple lines of code: <code>```</code>.</p><p>For example, this:</p><pre><code class="language-plaintext">```html\nExample text here...\n```</code></pre><p>Renders to something like this in HTML:</p><pre><code class="language-plaintext">&lt;pre&gt;\n  &lt;p&gt;Example text here...&lt;/p&gt;\n&lt;/pre&gt;</code></pre><p>And appears like this when viewed in a browser:</p><pre><code class="language-plaintext">Example text here...</code></pre><h3>Indented code</h3><p>You may also indent several lines of code by at least four spaces, but this is not recommended as it is harder to read, harder to maintain, and doesn\'t support syntax highlighting.</p><p>Example:</p><pre><code class="language-plaintext">    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code</code></pre><pre><code class="language-plaintext">// Some comments\nline 1 of code\nline 2 of code\nline 3 of code</code></pre><h3>Syntax highlighting</h3><p>Various markdown parsers, such as remarkable, support syntax highlighting with fenced code blocks. To activate the correct styling for the language inside the code block, simply add the file extension of the language you want to use directly after the first code "fence": <code>```js</code>, and syntax highlighting will automatically be applied in the rendered HTML (if supported by the parser). For example, to apply syntax highlighting to JavaScript code:</p><pre><code class="language-plaintext">```js\ngrunt.initConfig({\n  assemble: {\n    options: {\n      assets: \'docs/assets\',\n      data: \'src/data/*.{json,yml}\',\n      helpers: \'src/custom-helpers.js\',\n      partials: [\'src/partials/**/*.{hbs,md}\']\n    },\n    pages: {\n      options: {\n        layout: \'default.hbs\'\n      },\n      files: {\n        \'./\': [\'src/templates/pages/index.hbs\']\n      }\n    }\n  }\n});\n```\n</code></pre><p>Which renders to:</p><pre><code class="language-js">grunt.initConfig({\n  assemble: {\n    options: {\n      assets: \'docs/assets\',\n      data: \'src/data/*.{json,yml}\',\n      helpers: \'src/custom-helpers.js\',\n      partials: [\'src/partials/**/*.{hbs,md}\']\n    },\n    pages: {\n      options: {\n        layout: \'default.hbs\'\n      },\n      files: {\n        \'./\': [\'src/templates/pages/index.hbs\']\n      }\n    }\n  }\n});</code></pre><pre><code class="language-html">&lt;!doctype html&gt;\n&lt;html lang="en"&gt;\n  &lt;head&gt;\n    &lt;meta charset="UTF-8" /&gt;\n    &lt;link rel="icon" type="image/svg+xml" href="/vite.svg" /&gt;\n    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;\n    &lt;title&gt;Notes App&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body\n    class="bg-background text-foreground selection:bg-foreground selection:text-background"\n  &gt;\n    &lt;div id="root"&gt;&lt;/div&gt;\n    &lt;script type="module" src="/src/main.tsx"&gt;&lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre><pre><code class="language-css">@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: rgb(18 18 18);\n  --foreground: rgb(231 229 228);\n  --foreground-dark: #505050;\n  --foreground-darker: rgb(168 162 158);\n  --code-bg: #242424;\n  --border-color: rgb(38 38 38);\n  --detail: rgb(4 120 87);\n  --topbar-height: 2.75rem;\n\n  --prose-body: var(--foreground);\n  --prose-headings: var(--foreground);\n  --prose-lead: var(--foreground);\n  --prose-links: var(--foreground);\n  --prose-bold: var(--foreground);\n  --prose-counters: var(--foreground-dark);\n  --prose-bullets: var(--foreground-dark);\n  --prose-hr: var(--foreground-dark);\n  --prose-quotes: var(--foreground-darker);\n  --prose-quote-borders: var(--foreground-dark);\n  --prose-captions: var(--foreground-dark);\n  --prose-code: var(--foreground);\n  --prose-pre-code: var(--foreground);\n  --prose-pre-bg: var(--code-bg);\n  --prose-th-borders: var(--foreground-dark);\n  --prose-td-borders: var(--foreground-dark);\n\n  /* Code Block colors  */\n}\n\n.class {\n  .innerclass {\n  }\n}\n\n::-webkit-scrollbar {\n  @apply w-1.5;\n}\n\n::-webkit-scrollbar-thumb {\n  background: theme(colors.neutral.600);\n  outline: 0;\n}\n::-webkit-scrollbar-corner {\n  background: transparent;\n}</code></pre><pre><code class="language-ts">class MyClass {\n  public static myValue: string;\n  constructor(init: string) {\n    this.myValue = init;\n  }\n}\nconst re = /ab+c/;\nimport fs = require("fs");\nmodule MyModule {\n  export interface MyInterface extends Other {\n    myProperty: any;\n  }\n}\ndeclare magicNumber number;\nmyArray.forEach(() =&gt; { }); // fat arrow syntax</code></pre><h2>Links</h2><h3>Autolinks</h3><p>Autolinks are absolute URIs and email addresses inside <code>&lt;</code> and <code>&gt;</code>. They are parsed as links, where the URI or email address itself is used as the link\'s label.</p><pre><code class="language-plaintext">&lt;http://foo.bar.baz&gt;</code></pre><p>Renders to:</p><p>http://foo.bar.baz</p><p>URIs or email addresses that are not wrapped in angle brackets are not recognized as valid autolinks by markdown parsers.</p><h3>Inline links</h3><pre><code class="language-plaintext">[Assemble](http://assemble.io)</code></pre><p>Renders to (hover over the link, there is no tooltip):</p><p>Assemble</p><p>HTML:</p><pre><code class="language-plaintext">&lt;a href="http://assemble.io"&gt;Assemble&lt;/a&gt;</code></pre><h3>Link titles</h3><pre><code class="language-plaintext">[Assemble](https://github.com/assemble/ "Visit Assemble!")</code></pre><p>Renders to (hover over the link, there should be a tooltip):</p><p>Assemble</p><p>HTML:</p><pre><code class="language-plaintext">&lt;a href="https://github.com/assemble/" title="Visit Assemble!"&gt;Assemble&lt;/a&gt;</code></pre><h3>Named Anchors</h3><p>Named anchors enable you to jump to the specified anchor point on the same page.</p><p>For example, the following "chapter" links:</p><pre><code class="language-plaintext"># Table of Contents\n  * [Chapter 1](#chapter-1)\n  * [Chapter 2](#chapter-2)\n  * [Chapter 3](#chapter-3)\n</code></pre><p>...will jump to these sections:</p><pre><code class="language-plaintext">## Chapter 1 &lt;a name="chapter-1"&gt;&lt;/a&gt;\nContent for chapter one.\n\n## Chapter 2 &lt;a name="chapter-2"&gt;&lt;/a&gt;\nContent for chapter one.\n\n## Chapter 3 &lt;a name="chapter-3"&gt;&lt;/a&gt;\nContent for chapter one.\n</code></pre><p><strong>Anchor placement</strong></p><p>Note that placement of achors is arbitrary, you can put them anywhere you want, not just in headings. This makes adding cross-references easy when writing markdown.</p><p></p>';
